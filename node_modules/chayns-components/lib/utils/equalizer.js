var dimension = {
    WIDTH: 'width',
    MIN_WIDTH: 'minWidth',
    HEIGHT: 'height',
    MIN_HEIGHT: 'minHeight'
};

/**
 * Equalizes the dimension of the specified elements.
 *
 * @param elements Elements to be equalized
 * @param d Dimension
 * @param [d2=d] Dimension that should be set
 */
function equalize(elements, d, d2) {
    var length = elements.length;

    var dimensionToSet = d2 || d;
    var max = 0;

    if (length > 1) {
        var currentDim = void 0;

        for (var i = 0; i < length; i += 1) {
            currentDim = Math.ceil(elements[i].getBoundingClientRect()[d]);

            // find maximum dimension
            if (max < currentDim) {
                max = currentDim;
            }
        }

        if (max > 0) {
            // set all elements to max dimension
            for (var _i = 0; _i < length; _i += 1) {
                var element = elements[_i];
                element.style[dimensionToSet] = max + 'px';
            }
        }
    }
}

/**
 * Initializes equalizer
 */
// eslint-disable-next-line import/prefer-default-export
export function init(element) {
    var parents = Array.prototype.slice.call((element || document).querySelectorAll('[data-equalize]'));

    if (element && element.hasAttribute('data-equalize')) {
        parents.push(element);
    }

    for (var i = 0, l = parents.length; i < l; i += 1) {
        var parent = parents[i];
        var equalizeId = parent.getAttribute('data-equalize') || '';

        // equalize width
        var elements = parent.querySelectorAll('[data-cc-equalize-width="' + equalizeId + '"]');
        if (elements.length) {
            equalize(elements, dimension.WIDTH, dimension.MIN_WIDTH);
        }

        // equalize height
        elements = parent.querySelectorAll('[data-cc-equalize-height="' + equalizeId + '"]');
        if (elements.length) {
            equalize(elements, dimension.HEIGHT, dimension.MIN_HEIGHT);
        }

        // equalize both
        elements = parent.querySelectorAll('[data-cc-equalize-both="' + equalizeId + '"]');
        if (elements.length) {
            equalize(elements, dimension.WIDTH, dimension.MIN_WIDTH);
            equalize(elements, dimension.HEIGHT, dimension.MIN_HEIGHT);
        }
    }
}