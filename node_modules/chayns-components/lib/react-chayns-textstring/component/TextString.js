var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

import React, { Component } from 'react';
import PropTypes from 'prop-types';

var TextString = (_temp = _class = function (_Component) {
    _inherits(TextString, _Component);

    function TextString() {
        _classCallCheck(this, TextString);

        var _this = _possibleConstructorReturn(this, (TextString.__proto__ || Object.getPrototypeOf(TextString)).call(this));

        _this._closed = function (event) {
            var target = TextString.getEditableParent(event.target || event.srcElement || _this);
            if (target !== _this._div) {
                window.setTimeout(function () {
                    _this._textString = _this._div.innerHTML;

                    _this._div.innerHTML = _this._replacePlaceholder(_this._textString);

                    _this.setState({
                        editmode: false
                    });
                }, 100);
            }
        };

        _this.state = {
            editmode: false
        };

        _this.editorInitialized = false;
        return _this;
    }

    _createClass(TextString, [{
        key: 'componentDidMount',
        value: function componentDidMount() {
            var _this2 = this;

            this.updateTextStrings();

            this._div.addEventListener('click', function (event) {
                if (event.ctrlKey) {
                    _this2._div.innerHTML = _this2._textString;

                    _this2.setState({
                        editmode: true
                    });
                }
            });
        }
    }, {
        key: 'componentDidUpdate',
        value: function componentDidUpdate() {
            this.updateTextStrings();
        }
    }, {
        key: 'updateTextStrings',
        value: function updateTextStrings() {
            var editmode = this.state.editmode;


            if (!this.editorInitialized && editmode && this._showTextString() && window.chayns.env.user.isAuthenticated) {
                var _props = this.props,
                    textString = _props.textString,
                    render = _props.render;


                this._div.setAttribute('chayns-lang', textString);

                if (render === null || render) {
                    window.chayns.utils.lang.renderTextStrings(this._div.parentNode);
                }

                document.addEventListener('click', this._closed);

                this.editorInitialized = true;
            }
        }
    }, {
        key: '_replacePlaceholder',
        value: function _replacePlaceholder(value) {
            var replace = this.props.replace;

            var retVal = value;

            if (retVal && replace) {
                Object.keys(replace).map(function (key) {
                    retVal = retVal.replace(new RegExp(key, 'g'), replace[key]);
                });
            }

            return retVal;
        }
    }, {
        key: '_showTextString',
        value: function _showTextString() {
            return this._textString !== null && this._textString !== '' || window.showTextStrings;
        }
    }, {
        key: 'render',
        value: function render() {
            var _this3 = this;

            var _props2 = this.props,
                textString = _props2.textString,
                renderHtml = _props2.renderHtml,
                classNames = _props2.classNames;


            if (textString) {
                this._textString = window.chayns.utils.lang.get(textString);

                if (this._showTextString() && this._textString !== '') {
                    if (renderHtml) {
                        return React.createElement('div', {
                            className: classNames,
                            ref: function ref(div) {
                                _this3._div = div;
                            },
                            dangerouslySetInnerHTML: { __html: this._replacePlaceholder(this._textString) }
                        });
                    }

                    return React.createElement(
                        'div',
                        {
                            className: classNames,
                            ref: function ref(div) {
                                _this3._div = div;
                            }
                        },
                        this._replacePlaceholder(this._textString)
                    );
                }

                if (this._showTextString()) {
                    return React.createElement(
                        'div',
                        {
                            className: classNames,
                            ref: function ref(div) {
                                _this3._div = div;
                            }
                        },
                        'No textstring found.'
                    );
                }
            }

            return null;
        }
    }], [{
        key: 'getEditableParent',
        value: function getEditableParent(element) {
            var $element = element;

            while ($element && !$element.hasAttribute('chayns-lang')) {
                if ($element.nodeName.toLowerCase() === 'body' || !$element) {
                    return null;
                }
                $element = $element.parentNode;
            }
            return $element;
        }
    }]);

    return TextString;
}(Component), _class.defaultProps = {
    render: null,
    replace: null,
    renderHtml: null,
    classNames: null
}, _temp);
export { TextString as default };