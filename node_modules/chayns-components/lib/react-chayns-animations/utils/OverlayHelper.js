import * as chaynsCall from '../../utils/chayns/setOverlay';

var overlay = document.createElement('div');
var closeListener = null;

// Timeouts
var hideTimeout = void 0;
var removeChildTimeout = void 0;
var showTimeout = void 0;
var setListenerTimeout = void 0;

function initOverlay() {
    overlay.style.position = 'fixed';

    overlay.style.top = '0';
    overlay.style.left = '0';
    overlay.style.right = '0';
    overlay.style.bottom = '0';

    document.body.appendChild(overlay);
}

export function hideOverlay() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        transitionTime = _ref.transitionTime,
        color = _ref.color;

    clearInterval(showTimeout);
    clearInterval(setListenerTimeout);

    requestAnimationFrame(function () {
        chaynsCall.hideOverlay({
            color: color,
            transition: transitionTime + 'ms',
            mode: 1
        });

        overlay.style.transition = 'background-color ' + (transitionTime || 0) + 'ms ease';

        hideTimeout = window.setTimeout(function () {
            requestAnimationFrame(function () {
                overlay.style.backgroundColor = 'transparent';
            });
        }, transitionTime ? 10 : 0);

        removeChildTimeout = window.setTimeout(function () {
            if (overlay.parentNode) {
                overlay.parentNode.removeChild(overlay);
            }
        }, transitionTime || 0);
    });
}

export function showOverlay() {
    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        transitionTime = _ref2.transitionTime,
        zIndex = _ref2.zIndex,
        color = _ref2.color,
        onClose = _ref2.onClose;

    initOverlay();

    clearInterval(hideTimeout);
    clearInterval(removeChildTimeout);

    closeListener = onClose;

    requestAnimationFrame(function () {
        chaynsCall.showOverlay({
            color: color,
            transition: transitionTime + 'ms',
            mode: 1
        }).then(function () {
            if (closeListener) {
                closeListener();
            }
        });

        overlay.style.zIndex = zIndex;
        overlay.style.transition = 'background-color ' + (transitionTime || 0) + 'ms ease';

        overlay.onclick = null;
        setListenerTimeout = window.setTimeout(function () {
            overlay.onclick = function () {
                if (closeListener) {
                    closeListener();
                }
            };
        }, transitionTime || 0);

        showTimeout = window.setTimeout(function () {
            requestAnimationFrame(function () {
                overlay.style.backgroundColor = color;
            });
        }, transitionTime ? 10 : 0);
    });
}

export default {
    showOverlay: showOverlay,
    hideOverlay: hideOverlay
};