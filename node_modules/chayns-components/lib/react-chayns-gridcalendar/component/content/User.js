var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/* eslint-disable */

import React, { Component } from 'react';
import PropTypes from 'prop-types';

import Week from './Week';

var WEEK_WIDTH = 11.5 * (window.innerWidth > 450 ? 1 : 2);

var User = (_temp = _class = function (_Component) {
    _inherits(User, _Component);

    function User() {
        _classCallCheck(this, User);

        return _possibleConstructorReturn(this, (User.__proto__ || Object.getPrototypeOf(User)).call(this));
    }

    _createClass(User, [{
        key: 'render',
        value: function render() {
            var _this2 = this;

            return React.createElement(
                'div',
                { className: 'calendar__content_userEntries' },
                this.props.entries.map(function (entries, i) {
                    return React.createElement(Week, {
                        data: entries,
                        groups: _this2.props.groups,
                        key: entries[0].date.getTime() + i,
                        onClick: _this2.props.onClick,
                        focus: _this2.props.focus,
                        groupFocus: _this2.props.groupFocus,
                        weekWidth: _this2.props.weekWidth
                    });
                })
            );
        }
    }]);

    return User;
}(Component), _class.defaultProps = {
    entries: []
}, _temp);
export { User as default };